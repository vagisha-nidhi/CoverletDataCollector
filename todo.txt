TODOs of coverlet data collector:
3. Resource localization??
4. add comments
16. we are doing configurationElement[CoverletConstants.IncludeFiltersElementName], check if casing matters here. In runsettings change the casing.
14. Check if all the traces and logs are printed properly. Specially CoverletSettings.ToString() override.
15. If any error like, missingmethodexception, then OnSessionStart doesn't log it anywhere. we should trace it.
19. Acceptance tests to write:
		a. vstest.console with dll: without runsettings
		b. dotnet test or dotnet vstest: without runsettings
		c. dotnet test or dotnet vstest: with runsettings
20. Correctness UTs or functional tests: Copy from coverlet
21. Try with multiple test sources in both vstest.console.exe and dotnet test that only one test source is coming to collector. Do the same for multiple test cases with different test sources as well.
22. We are getting exception like: "Data collector 'XPlat code coverage' message: Data collector caught an exception of type 'Microsoft.TestPlatform.Extensions.CoverletCoverageDataCollector.Utilities.CoverletDataCollectorException': 'Failed to instrument modules'. More details: ..""
We should print inner exception to prevent such cases.
23. Inproc flow should go as out of proc.
24. coverlet new logger implementation

Scenarios:
validations - tested for windows and linux
1. --collect:"XPlat code coverage" works properly
2. dotnet test with different casing --collect:"xpLAt coDe coveraGE"
3. dotnet test with runsettings with correct inputs (without configuration, with empty configuration, without uri, with wrong uri, with correct configuration, empty inlcude filter)
4. dotnet test with runsettings with incorrect input keys and incorrect key's values
5. dotnet test with both runsettings and --collect:"XPlat code coverage"
6. Postive eqttrace logs
7. Negative eqttrace and logger logs

Current: testing casing with attributes in runsettings